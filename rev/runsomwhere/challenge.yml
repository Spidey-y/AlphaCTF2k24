name: runsomewhere
author: j3x
author_link: https://github.com/amj3x

category: reverse
difficulty: medhard

description: |
  > I ran this binary somewhere that contains crucial files, and suddenly, all of them were encrypted. Could you help me recover them?   
  > Important : Execute this binary only in a test directory with test files that you're okay with them getting encrypted. Otherwise, you'll need to solve the challenge before you'll be able to recover your files.  
  **Author** : j3x
flags:
  - AlphaCTF{y0u_h4ve_b34t3n_mY_b4By_rust0mwar3}

type: dynamic
value: 500
extra:
    initial: 500
    decay: ${DECAY} # leave it like this
    minimum: 50

image: gcr.io/gdg-ctf-2022/{challenge_name}

# Optional settings

# connection_info is used to provide a link, hostname, or instructions on how to connect to a challenge
# 1. For http challenges: http://{challenge_name}.chal.ctf.gdgalgiers.com
# 2. For nc challenges (leave ${PORT} as is): nc -v {category}.chal.ctf.gdgalgiers.com ${PORT}
# 3. For ssh challenges (leave ${PORT} as is): ssh -p ${PORT} {user}@{category}.chal.ctf.gdgalgiers.com
# 4. For per team docker challenges (leave ${INSTANCE_PORT} as is):
#    4.1 http: http://inst.ctf.gdgalgiers.com:${INSTANCE_PORT}
#    4.2 nc: nc -v inst.ctf.gdgalgiers.com ${INSTANCE_PORT}
#    4.3 ssh: ssh -p ${INSTANCE_PORT} {user}@inst.ctf.gdgalgiers.com
# 5. For offline challenges: remove connection_info
# connection_info: connection_info

# Topics are used to help tell what techniques/information a challenge involves
# They are generally only visible to admins
# Accepts strings
topics:
  - encryptor
  - rust

# tags:
#   - sandbox
#   - js

# Files to be uploaded alongside the challenge in CTFd
# These paths are relative to the same directory where the challenge.yml file is.
files:
  - ./chall.zip

# DO NOT CHANGE

state: hidden

version: "0.1"

deployment:
  # Temporary auto IP ban when detecting abuse
  autoban: false
  # Allow/Deny egress (outcoming) traffic from pod
  # "allow" -> Allow outcoming traffic
  # "deny" -> Deny outcoming traffic
  egress: "allow"
  # This stores the challenge name but in an acceptable format for deployment
  # Regex for the name is [a-z0-9]+(-)*[a-z0-9]*
  name: runsomewhere
  # The state of deployment of challenge (either false or true)
  deployed: false
  replicasNumber: 1
  # Type of the challenge either tcp or http 
  type: http 
  dockerRepository: gcr.io/gdg-ctf-2022
  dockerImage: challenge-name
  # If the challenge don't expose any port then leave it empty
  containerPort: 80
  limits:
    cpu: 200m
    memory: 500Mi 
  requests:
    cpu: 100m
    memory: 200Mi 
  healthCheck:
    initialDelaySeconds: 10
    periodSeconds: 30
  other: 
    # parameters of pod annotations 
    podAnnotations: {}

